# This is a basic workflow to help you get started with Actions

name: Test PR

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
  build-dev:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host server
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: root
          SSH_KEY: ${{ secrets.STAGING_SSH_KEY }}
          SSH_HOST: grocock.email
        
      - name: Clone changes
        run: ssh staging 'cd /root/website/website_dev; git checkout ${ GITHUB_HEAD_REF }'
      - name: Build changes
        run: ssh staging 'cd /root/website/website_dev; docker-compose -f "./docker-compose.dev.yml" up'
            
      - name: Check http status code of Development site
        uses: lakuapik/gh-actions-http-status@v1
        with:
          sites: '["https://dev.grocock.email"]'
          expected: '[200]'
