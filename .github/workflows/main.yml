name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-dev:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host server
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: grocock.email
        
      - name: Clone Dev changes
        run: ssh server 'cd /root/website/website_dev; git checkout master; git pull'
      - name: Shutdown Dev
        run: ssh server 'cd /root/website/website_dev; docker-compose -f "./docker-compose.dev.yml" down'
      - name: Build Dev changes
        run: ssh server 'cd /root/website/website_dev; docker-compose -f "./docker-compose.dev.yml" up -d'
      
      - name: Sleep for 1 minute
        uses: jakejarvis/wait-action@master
        with:
          time: '60s'
          
  test-dev:
    needs: [build-dev]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:      
      - name: Check http status code of Development site
        uses: lakuapik/gh-actions-http-status@v1
        with:
          sites: '["https://dev.grocock.email"]'
          expected: '[200]'
      
  build-prod:
    needs: [test-dev]
    if: github.actor == github.event.repository.owner.login
        
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host server
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: grocock.email
          
      - name: Clone Prod changes
        run: ssh server 'cd /root/website/website_prod; git checkout master; git pull'
        
      - name: Shutdown Prod
        run: ssh server 'cd /root/website/website_prod; docker-compose -f "./docker-compose.dev.yml" down'
      - name: Build Prod changes
        run: ssh server 'cd /root/website/website_prod; docker-compose -f "./docker-compose.dev.yml" up -d'
      
      - name: Sleep for 1 minute
        uses: jakejarvis/wait-action@master
        with:
          time: '60s'
      
      
  test-prod:
    needs: [build-prod]
    if: github.actor == github.event.repository.owner.login
        
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host server
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: grocock.email
      - name: Check http status code of Production site
        uses: lakuapik/gh-actions-http-status@v1
        with:
          sites: '["https://grocock.email"]'
          expected: '[200]'
